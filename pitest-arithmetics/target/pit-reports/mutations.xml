<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED'><sourceFile>Arithmetics.java</sourceFile><mutatedClass>com.group17.pitest.Arithmetics</mutatedClass><mutatedMethod>difference</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><killingTest>com.group17.pitest.ArithmeticsTest.testDifference()</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Arithmetics.java</sourceFile><mutatedClass>com.group17.pitest.Arithmetics</mutatedClass><mutatedMethod>difference</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><killingTest>com.group17.pitest.ArithmeticsTest.testDifference()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Arithmetics.java</sourceFile><mutatedClass>com.group17.pitest.Arithmetics</mutatedClass><mutatedMethod>product</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><killingTest>com.group17.pitest.ArithmeticsTest.testProduct()</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Arithmetics.java</sourceFile><mutatedClass>com.group17.pitest.Arithmetics</mutatedClass><mutatedMethod>product</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><killingTest>com.group17.pitest.ArithmeticsTest.testProduct()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Arithmetics.java</sourceFile><mutatedClass>com.group17.pitest.Arithmetics</mutatedClass><mutatedMethod>quot</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><killingTest>com.group17.pitest.ArithmeticsTest.testQuot()</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Arithmetics.java</sourceFile><mutatedClass>com.group17.pitest.Arithmetics</mutatedClass><mutatedMethod>quot</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><killingTest>com.group17.pitest.ArithmeticsTest.testQuot()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Arithmetics.java</sourceFile><mutatedClass>com.group17.pitest.Arithmetics</mutatedClass><mutatedMethod>sum</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>7</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><killingTest>com.group17.pitest.ArithmeticsTest.testSum()</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Arithmetics.java</sourceFile><mutatedClass>com.group17.pitest.Arithmetics</mutatedClass><mutatedMethod>sum</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><killingTest>com.group17.pitest.ArithmeticsTest.testSum()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
</mutations>
